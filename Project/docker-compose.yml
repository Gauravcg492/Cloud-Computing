version: "3.3"
services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
  zookeeper:
    image: zookeeper
    restart: always
    container_name: zookeeper
    ports:
      - 2181:2181
      - 8080:8080
  mmongo:
    image: mongo
    container_name: mmongo
    ports:
      - 25000:27017
  smongo_1:
    image: mongo
    container_name: smongo_1
    ports:
      - 26000:27017
  master:
    image: master:latest
    container_name: master
    restart: on-failure
    build: ./Master
    command: sh -c "sleep 10 && npm start"
    environment:
      - WORKER=MASTER
      - DB_CONNECTION=mongodb://mmongo:27017
      - RMQ_ADDR=amqp://rabbitmq
      - ZPATH=zookeeper:2181
      - WNAME=master
    depends_on:
      - mmongo
      - zookeeper
      - rabbitmq
  slave_1:
    image: slave:latest
    container_name: slave_1
    restart: on-failure
    build: ./Slave
    command: sh -c "sleep 10 && npm start"
    environment:
      - WORKER=SLAVE
      - DB_CONNECTION=mongodb://smongo_1:27017
      - RMQ_ADDR=amqp://rabbitmq
      - ZPATH=zookeeper:2181
      - WNAME=master
    depends_on:
      - smongo_1
      - zookeeper
      - rabbitmq
  orchestrator:
    container_name: orchestrator
    image: orchestrator:latest
    restart: always
    build: ./Orchestrator
    command: sh -c "sleep 30 && npm start"
    environment:
      - RMQ_ADDR=amqp://rabbitmq
      - DPATH=/app/orchestrator/data/constants.json
      - ZPATH=zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports: 
      - 80:80
    depends_on:
      - rabbitmq
      - zoo